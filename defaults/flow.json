[{"id":"4d500e71.92a0d","type":"websocket-listener","z":"273bebb1.dcb104","path":"/ws/map","wholemsg":"false"},{"id":"7f1be91.8b6b898","type":"websocket-listener","z":"273bebb1.dcb104","path":"/ws/cloudant","wholemsg":"false"},{"id":"2be4c18b.aa87c6","type":"websocket-listener","z":"273bebb1.dcb104","path":"/ws/audio","wholemsg":"false"},{"id":"5d1215fa.74447c","type":"ibmiot in","z":"a4c85830.58c3a8","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"9e8fdadf5c17","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In (iPad:94128ececff1) (iPhone:1247823ebf04) (Samsung:c4be84722b07)","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":322.20001220703125,"y":77.19999694824219,"wires":[["98ccea60.e398b","b6e220e.732196","bed0d26b.e1649"]]},{"id":"b6e220e.732196","type":"function","z":"a4c85830.58c3a8","name":"temp","func":"var temp;\n\n if (msg.payload.d.AmbTemp !== undefined) {\n temp = msg.payload.d.AmbTemp; // Typical Apple datastructure\n }\n\n if (msg.payload.d.ambient_temp !== undefined) {\n temp = msg.payload.d.ambient_temp; // Typical Android datastructure\n }\n\n if (msg.payload.d.temp !== undefined) {\n temp = msg.payload.d.temp;\n } \n\nreturn {payload:temp};\n","outputs":1,"noerr":0,"x":727.7833938598633,"y":76.44999408721924,"wires":[["7d58ed78.6bac0c"]]},{"id":"7d58ed78.6bac0c","type":"switch","z":"a4c85830.58c3a8","name":"temp thresh","property":"payload","rules":[{"t":"lte","v":"25"},{"t":"gt","v":"25"}],"checkall":"true","outputs":2,"x":866.2834758758545,"y":77.28333473205566,"wires":[["134a1a77.ef2696"],["69f2d766.c5d86"]]},{"id":"98ccea60.e398b","type":"debug","z":"a4c85830.58c3a8","name":"device data","active":false,"console":"false","complete":"true","x":814.3667240142822,"y":162.19998168945312,"wires":[]},{"id":"134a1a77.ef2696","type":"template","z":"a4c85830.58c3a8","name":"safe","field":"","template":"Temperature ({{payload}}) within safe limits","x":1050.6999492645264,"y":67.86664581298828,"wires":[["67f837e.8467648","6f1fc0b8.98f21"]]},{"id":"69f2d766.c5d86","type":"template","z":"a4c85830.58c3a8","name":"danger","fieldType":"msg","template":"Temperature ({{payload}}) critical","x":1066.0331592559814,"y":107.19997787475586,"wires":[["6f1fc0b8.98f21"]]},{"id":"bed0d26b.e1649","type":"function","z":"a4c85830.58c3a8","name":"Check Temperature and create JSON Data","func":"if ( msg !== null)\n{ // if msg !0 null begin\n  // Create data object\n  data = new Object();\n\n  // *****************\n  // Get Data and time\n    var currentdate = new Date();\n    var the_minutes     = \"00\";\n    var the_seconds     = \"00\";\n\n    if ((currentdate.getMinutes() < 10)){\n        the_minutes = \"0\"+currentdate.getMinutes();\n    } else {\n        the_minutes = currentdate.getMinutes();\n    }\n\n    if ((currentdate.getSeconds() < 10)){\n        the_seconds = \"0\"+currentdate.getSeconds();\n    } else {\n        the_seconds = currentdate.getSeconds();\n    }\n\n    data.date   = currentdate.getDate() + \".\" + (currentdate.getMonth()+1)  + \".\" + currentdate.getFullYear();\n    data.time   = currentdate.getHours() + \":\"  + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n    data.image  = \"undefined\";\n    data.imageLocalURI = \"undefined\";\n\n  // *****************\n  // Get the concrete Sensor data\n  // the input can be different based on your device/app type:\n  // \"Apple, Android, Simulator do have different datastructure in the payload\"\n    //-----------------------------------------------------------------------\n    data.temp = \"20.0000\"; // default\n    if (msg.payload.d.AmbTemp !== undefined) {\n        data.temp     = msg.payload.d.AmbTemp;      // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.ambient_temp !== undefined) {\n        data.temp     = msg.payload.d.ambient_temp;  // Typical Android datastructure\n    }\n\n    if (msg.payload.d.temp !== undefined) {\n        data.temp     = msg.payload.d.temp;          // Typical Simulator datastructure\n    }\n    //--------------------------------------------------------------------------\n    data.iptemp = \"20.0000\"; //default\n    if (msg.payload.d.IRTemp !== undefined) {\n        data.irtemp   = msg.payload.d.IRTemp;        // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.object_temp !== undefined) {\n        data.irtemp   = msg.payload.d.object_temp;   // Typical Android datastructure\n    }\n\n    if (msg.payload.d.objectTemp !== undefined) {\n        data.irtemp   = msg.payload.d.objectTemp;    // Typical Simulator datastructure\n    }\n    //--------------------------------------------------------------------------\n    data.optical = 0; // default if not defined by others\n\n    if (msg.payload.d.optical !== undefined) {\n        data.optical  = msg.payload.d.optical;      // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.light !== undefined) {\n        data.optical  = msg.payload.d.light;      // Typical Android datastructure\n    }\n    //--------------------------------------------------------------------------\n    data.deviceId = msg.deviceId; // Typical datastructure for all\n\n  // *****************\n  // Add your additional sensor data\n    data.sensorImage = \"img/sensor-detail.png\";\n    data.comment = \"Currently on comment\";\n    data.sensorType = \"Simplelink SensorTag - TI.com\";\n\n    data.image    = \"undefined\";\n    data.imageLocalURI = \"undefined\";\n\n  // *****************\n  // Define your Device Type which ICON should be dispayed\n  // ======================================================\n  // You can get the Device ID from your TI App on your mobile device.\n  //\n  // (iPad:94128ececff1) (iPhone:08b5cbcfa326) (Samsung:c4be84722b07)\n  // http://www.w3schools.com/jsref/jsref_localecompare.asp\n  var ipad = \"94128ececff1\";\n  var iphone = \"1247823ebf04\"; // \"08b5cbcfa326\";\n  var samsung = \"c4be84722b07\";\n\n  if(data.deviceId.localeCompare(\"94128ececff1\") == 0){\n     data.deviceType=\"iPad\";\n     data.deviceImageURI=\"img/ipad.png\";\n  }\n\n  if(data.deviceId.localeCompare(\"08b5cbcfa326\") == 0){\n     data.deviceType=\"iPhone\";\n     data.deviceImageURI=\"img/iphone.png\";\n  }\n\n  if(data.deviceId.localeCompare(\"c4be84722b07\") == 0){\n     data.deviceType=\"Samsung\";\n     data.deviceImageURI=\"img/samsung.png\";\n  } else {\n     data.deviceType=\"Container\";\n     data.deviceImageURI=\"img/container.png\";\n  }\n\n  // *****************\n  // Ehningen 48.65891, 8.940540000000055\n  // http://www.viewphotos.org/germany/coordinates-of-Ehningen-5390.html\n  data.gtfs_latitude  = \"48.6589\";\n  data.gtfs_longitude = \"8.940540000000055\";\n\n  // Check Temperature\n  if ( data.temp < 25 )\n  {\n     data.message= data.date + \"/\" + data.time + \" (\" + data.temp + \") within safe limits\";\n     data.status =\"SAFE\";\n  } else {\n     data.message= data.date + \"/\" + data.time + \" (\" + data.temp + \") is in critial limits\";\n     data.status =\"CRITICAL\";\n  }\n\n  // *****************\n  // Build data your own datastructure\n  // -> create json root object\n  sensorroot = new Object();\n  sensorroot.sensordatavalue = data;\n\n  // *****************\n  // Set your data as the payload,\n  // which will be used in the next node as input.\n  msg.payload = sensorroot;\n} else {\n    msg.payload = \"No IoT Data Input\";\n}// if else msg != null end\n\nreturn msg;","outputs":1,"noerr":0,"x":856.1999664306641,"y":217.53334999084473,"wires":[["c511fc03.6b288","7e7295ce.b392fc"]]},{"id":"c511fc03.6b288","type":"debug","z":"a4c85830.58c3a8","name":"device data","active":false,"console":"false","complete":"true","x":1229.5108070373535,"y":162.40853214263916,"wires":[]},{"id":"7e7295ce.b392fc","type":"cloudant out","z":"a4c85830.58c3a8","service":"iot-sensor-tag-test-cloudantNoSQLDB","cloudant":"","name":"Store IoT Data in Cloudant","database":"my_demo_iot_db","payonly":true,"operation":"insert","x":1229.199836730957,"y":216.2000274658203,"wires":[]},{"id":"9d2ab3ed.c9229","type":"inject","z":"a4c85830.58c3a8","name":"Start messages","topic":"","payload":"The temperature is in safe limits! This is a text to speech check!","payloadType":"str","repeat":"22","crontab":"","once":true,"x":1029.2907485961914,"y":150.59398651123047,"wires":[["6f1fc0b8.98f21"]]},{"id":"67f837e.8467648","type":"debug","z":"a4c85830.58c3a8","name":"Actual Temperature","active":false,"console":"false","complete":"payload","x":1237.8665390014648,"y":43.86663055419922,"wires":[]},{"id":"299bd862.9a91d","type":"watson-text-to-speech","z":"a4c85830.58c3a8","name":"MyText2Speech","lang":"english","voice":"en-US_MichaelVoice","x":1448.0333251953125,"y":92.53337860107422,"wires":[["9ac656ac.311da8","caf29824.b7ceb8"]]},{"id":"9ac656ac.311da8","type":"function","z":"a4c85830.58c3a8","name":"From Speech to Payload","func":"// \nmsg.payload = msg.speech;\n\nreturn msg;","outputs":1,"noerr":0,"x":1677.1847763061523,"y":132.74543952941895,"wires":[["c26f1a1e.9a09f8","7255a849.781458"]]},{"id":"c26f1a1e.9a09f8","type":"debug","z":"a4c85830.58c3a8","name":"payload output","active":false,"console":"false","complete":"true","x":1956.7000617980957,"y":99.86665344238281,"wires":[]},{"id":"caf29824.b7ceb8","type":"debug","z":"a4c85830.58c3a8","name":"pure text to speech output","active":false,"console":"false","complete":"true","x":1722.700080871582,"y":48.199981689453125,"wires":[]},{"id":"7255a849.781458","type":"websocket out","z":"a4c85830.58c3a8","name":"The WebSocket /ws/audio","server":"2be4c18b.aa87c6","client":"","x":1963.0334396362305,"y":177.86667823791504,"wires":[]},{"id":"6f1fc0b8.98f21","type":"delay","z":"a4c85830.58c3a8","name":"","pauseType":"rate","timeout":"10","timeoutUnits":"seconds","rate":"10","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":1265.8666610717773,"y":92.53333854675293,"wires":[["299bd862.9a91d"]]},{"id":"87e781c4.8e8738","type":"cloudant in","z":"a4c85830.58c3a8","service":"iot-sensor-tag-test-cloudantNoSQLDB","cloudant":"","name":"Get all docs","database":"my_demo_iot_db","search":"_all_","design":"","index":"","x":319.20005798339844,"y":278.2000541687012,"wires":[["4994560d.1743f","79094087.8bd99","34401ada.50db76"]]},{"id":"4994560d.1743f","type":"function","z":"a4c85830.58c3a8","name":"Get Do Count","func":"var count = msg.payload.length;\n\nmsg.payload = \"Cloudant contains (\" + count + \") docs\";\n\nreturn msg;","outputs":"1","noerr":0,"x":524.5334434509277,"y":280.0888900756836,"wires":[["8bfa1c99.a3a69"]]},{"id":"8bfa1c99.a3a69","type":"debug","z":"a4c85830.58c3a8","name":"db info","active":false,"console":"false","complete":"payload","x":732.533447265625,"y":270.75567626953125,"wires":[]},{"id":"e0444260.fd6e68","type":"inject","z":"a4c85830.58c3a8","name":"Start get Data","topic":"","payload":"","payloadType":"str","repeat":"30","crontab":"","once":false,"x":117.86673736572266,"y":316.5333786010742,"wires":[["87e781c4.8e8738","91d1039.0a60d8"]]},{"id":"79094087.8bd99","type":"function","z":"a4c85830.58c3a8","name":"Extract Data","func":"var count = msg.payload.length;\n\nvar list = [];\nfor (i=0;i<count;i++) {\nlist.push({\n _id: msg.payload[i]._id,\n _rev: msg.payload[i]._rev,\n message: msg.payload[i].sensordatavalue.message,\n temp: msg.payload[i].sensordatavalue.temp,\n irtemp: msg.payload[i].sensordatavalue.irtemp,\n date: msg.payload[i].sensordatavalue.date,\n time: msg.payload[i].sensordatavalue.time,\n optical: msg.payload[i].sensordatavalue.optical,\n status: msg.payload[i].sensordatavalue.status,\n deviceId: msg.payload[i].sensordatavalue.deviceId,\n deviceType: msg.payload[i].sensordatavalue.deviceType,\n gtfs_latitude: msg.payload[i].sensordatavalue.gtfs_latitude,\n gtfs_longitude: msg.payload[i].sensordatavalue.gtfs_longitude,\n image: msg.payload[i].sensordatavalue.image,\n imageLocalURI: msg.payload[i].sensordatavalue.imageLocalURL,\n comment : msg.payload[i].sensordatavalue.comment\n });\n}\n\nmsg.payload = {\n \"docs\": \n list\n }\nreturn msg;","outputs":"1","noerr":0,"x":512.8667678833008,"y":325.53331756591797,"wires":[["8bfa1c99.a3a69","14e9ed67.1f7213","19f73e4d.35c372"]]},{"id":"14e9ed67.1f7213","type":"websocket out","z":"a4c85830.58c3a8","name":"","server":"7f1be91.8b6b898","client":"","x":789.5333557128906,"y":305.866641998291,"wires":[]},{"id":"19f73e4d.35c372","type":"websocket out","z":"a4c85830.58c3a8","name":"","server":"4d500e71.92a0d","client":"","x":763.8666915893555,"y":353.20004653930664,"wires":[]},{"id":"2179d8f5.8ea8a","type":"debug","z":"a4c85830.58c3a8","name":"Cloudant Data","active":false,"console":"false","complete":"payload","x":851.8667106628418,"y":406.5334014892578,"wires":[]},{"id":"b317e2dd.5c3248","type":"http in","z":"a4c85830.58c3a8","name":"","url":"/cloudant","method":"get","swaggerDoc":"","x":94.53343200683594,"y":530.2000122070312,"wires":[["c9cbcecb.c95298"]]},{"id":"50acc55e.d2111c","type":"http response","z":"a4c85830.58c3a8","name":"http://YOUR_BLUEMIN_URL/cloudant","x":707.033447265625,"y":530.2000122070312,"wires":[]},{"id":"c9cbcecb.c95298","type":"template","z":"a4c85830.58c3a8","name":"Show Sensor Cloudant Data on WebSite","field":"payload","fieldType":"msg","format":"html","template":"<!DOCTYPE html>\n<html>\n <head>\n <style>\n body {\n background-color: linen;\n }\n\n h1 {\n color: maroon;\n margin-left: 40px;\n }\n table, th, td {\n border: 1px solid black;\n }\n #header {\n background-color:black;\n color:white;\n text-align:center;\n padding:5px;\n }\n #footer {\n background-color:black;\n color:white;\n clear:both;\n text-align:center;\n padding:5px;\n }\n </style>\n <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n <meta charset=\"utf-8\">\n <title>Extract Cloudant Data</title>\n <script type=\"text/javascript\">\n\t\tfunction initialize() {\n\t var loc = window.location;\n var messageCount = 0;\n\t var sensorGeoPage=\"\"\n if (loc.protocol === \"https:\") {\n newUri = \"wss:\";\n } else {\n newUri = \"ws:\";\n }\n newUri += \"//\" + loc.host + \"/ws/cloudant\";\n sensorGeoPage=loc.protocol + \"//\" + loc.host + \"/map\";\n\n\t\t var output = document.getElementById('output');\n\n\t\t var sock = new WebSocket(newUri);\n\n\t\t sock.onopen = function(){\n\t\t //$('#output').text('Waiting for cloudant data ...');\n\t\t console.log(\"Connected websocket\");\n\t\t console.log(\"Sending ping..\");\n\t\t\t sock.send(\"Ping!\");\n\t\t console.log(\"Ping sent..\");\n\t\t };\n\n\t\t sock.onerror = function(){\n\t\t document.write(\"<p>Problem Error!!</p>\");\n\t\t console.log(\"Websocket error\");\n\n\t\t };\n\n\t\t sock.onmessage = function(evt){\n message = \"getting message\" + messageCount;\n messageCount++;\n\t\t console.log(message);\n\t\t document.write(\"<style>body{background-color: linen;}h1{color: maroon;margin-left: 40px;}table, th, td {border: 1px solid black;}</style>\");\n\t\t document.write(\"<p>Cloudant Sensor Data are available!</p>\");\n\t\t document.write(\"<p>***************************</p>\");\n\t\t // document.write(evt.data);\n\t\t // document.write(\"<p>***************************</p>\");\n\t\t var sensorData = JSON.parse(evt.data);\n\t\t document.write(\"<p>Show Table</p>\");\n\t\t document.write(\"<a href=\"+sensorGeoPage+\">Go to Sensor Geo Page</a>\");\n\t\t document.write(\"<p>***************************</p>\");\n\n\t\t var myTable= \"<table>\";\n\t\t myTable+=\"<tr>\";\n\t\t myTable+=\"<td style='width: auto; color: black; text-align: center;'>Count</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Message</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Temperature</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>DeviceId</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>DeviceType</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>GeoLocation</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Date and Time</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Status</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Image</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: center;'>Comment</td>\";\n myTable+=\"</tr>\";\n //myTable+=\"<tr><td style='width: 100px; '>---------------</td>\";\n //myTable+=\"<td style='width: 100px; text-align: right;'>---------------</td>\";\n //myTable+=\"<td style='width: 100px; text-align: right;'>---------------</td></tr>\";\n\n\t\t var sensors = sensorData.docs;\n\n for(var i = 0; i < sensors.length; i++) {\n \t\t\t var sensor = sensors[i];\n \t\t\t //output = document.write(\"<p>\"+ sensor + \"</p>\");\n \t\t\t myTable+=\"<tr>\";\n \t\t\t myTable+=\"<td style='width: auto; color: blue; text-align: left;'>(\" + i + \")</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.message + \"</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.temp + \"</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.deviceId + \"</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.deviceType + \"</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'> (\" + sensor.gtfs_latitude + \"):(\" + sensor.gtfs_longitude + \")</td>\";\n myTable+=\"<td style='width: auto; color: blue; text-align: left;'> (\" + sensor.date + \"):(\" + sensor.time + \")</td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: left;'> <b>\" + sensor.status +\"</b></td>\";\n myTable+=\"<td style=''><img width='100' height='100' alt='No Image' src='\"+ sensor.image +\"'/></td>\";\n myTable+=\"<td style='width: auto; color: black; text-align: left;'> <b>\" + sensor.comment +\"</b></td>\"\n myTable+=\"</tr>\";\n \t\t\t}\n\n \t\t\tmyTable+=\"</table>\";\n document.write( myTable);\n \t\t };\n\t\t};\n </script>\n </head>\n <body>\n <!-- ***** CHANGES ***** -->\n <!-- Insert YOUR BLUEMIX URL -->\n <div id=\"header\">\n <p>Hello this is the Cloudant Sensor Data Site ... </p> <a href=\"http://<--YOUR BLUEMIX URL-->.mybluemix.net/map\">Go to Senosor Data Page</a>\n </div>\n <div id=\"output\">Connecting to Socket to get the Cloudant Sensor Data...</div>\n <script type=\"text/javascript\">\n initialize();\n </script>\n <div id=\"footer\">\n IoT Bluemix Mobile Sample Page\n </div>\n </body>\n</html>","x":347.53338623046875,"y":530.2000122070312,"wires":[["50acc55e.d2111c"]]},{"id":"bb98a40f.8d2b9","type":"template","z":"a4c85830.58c3a8","name":"Show Geo WebSite with Sensor Cloudant Data ","field":"payload","fieldType":"msg","format":"html","template":"<!--- \n<script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"></script> \n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA3WyzWuy4yav_YeS15_m0-322r-EnEl_c&sensor=true\"></script>\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA3WyzWuy4yav_YeS15_m0-322r-EnEl_c\"></script>\n-->\n\n<!DOCTYPE html>\n<html>\n <head>\n <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n <meta charset=\"utf-8\">\n <title>Sensor Geo Data</title>\n <style>\n html, body, #map-canvas {\n height: 100%;\n margin: 0px;\n padding: 0px\n }\n #header {\n background-color:black;\n color:white;\n text-align:center;\n padding:5px;\n }\n #footer {\n background-color:black;\n color:white;\n clear:both;\n text-align:center;\n padding:5px; \n }\n </style>\n <script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"></script>\n <script>\n\t\tfunction initialize() {\n\t\t \n\t\t var loc = window.location;\n if (loc.protocol === \"https:\") {\n newUri = \"wss:\";\n } else {\n newUri = \"ws:\";\n }\n newUri += \"//\" + loc.host + \"/ws/map\";\n\t\t \n\t\t var sock = new WebSocket(newUri);\n\t\t var stuttgart = new google.maps.LatLng(48.76666672,9.1833333);\n\t\t var mapOptions = {\n\t\t zoom: 10,\n\t\t center: stuttgart\n\t\t };\n\t\t var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n\t\t \n\t\t sock.onopen = function(){ \n\t\t console.log(\"Connected websocket\");\n\t\t console.log(\"Sending ping..\");\n\t\t \tsock.send(\"Ping!\");\n\t\t console.log(\"Ping sent..\");\n\t\t };\n\t\t \n\t\t sock.onerror = function(){ \n\t\t console.log(\"Websocket error\"); \n\t\t \n\t\t };\n\t\t \n\t\t sock.onmessage = function(evt){\n\t\t console.log(\"getting message\");\n\t\t \n\t\t var sensorData = JSON.parse(evt.data);\n\t\t var sensors = sensorData.docs;\n\t\t var logmessage=\"\";\n\t\t var geotitle=\"\";\n\t\t \n\t\t console.log(\"in 'onmessage'\");\n\t\t \n\t\t\tfor(var i = 0; i < sensors.length; i++) {\n\t\t\t var sensor = sensors[i];\n\t\t\t // var j = i * i;\n\t\t\t // var move = \"6\"+ j;\n\t\t\t // var move2 = \"5\"+ j;\n\t\t\t // var latitude = sensor.gtfs_latitude.replace(\"65\", move);\n\t\t\t // var longitude = sensor.gtfs_longitude.replace(\"94\", move2);\n\t\t\t \n\t\t\t var longitude = sensor.gtfs_longitude;\n\t\t\t var latitude = sensor.gtfs_latitude;\n\t\t\t \n\t\t\t logmessage=\"Count [\"+i+\"] Sensor ID: [\"+sensor.deviceId+\"] Status: [\"+sensor.status+\"]\";\n\t\t\t console.log(logmessage);\n\t\t\t geotitle=\"Device: (\" + sensor.deviceId + \") Status: (\" + sensor.status +\") Date: (\"+ sensor.date + \") Time: (\" + sensor.time +\")\";\n\t\t\t logmessage=\"Geo Title: \" + geotitle;\n\t\t\t console.log(logmessage);\n\t\t\t logmessage=\"La {\" + latitude + \"} Lo {\" + longitude + \"}\";\n\t\t\t console.log(logmessage);\n\t\t\t //geotitle=\"Title\"+i;\n\t\t\t \n\t\t\t var marker = new google.maps.Marker({\n\t\t\t position: new google.maps.LatLng(latitude,longitude),\n\t\t\t map: map,\n\t\t\t animation: google.maps.Animation.DROP,\n\t\t\t title: geotitle\n\t\t\t });\n\t\t\t}\n\t\t\t\n\t\t\tvar marker = new google.maps.Marker({\n\t\t\t position: new google.maps.LatLng(48.76666672,9.1833333),\n\t\t\t map: map,\n\t\t\t animation: google.maps.Animation.DROP,\n\t\t\t title: \"Home Location - Stuttgart\"\n\t\t\n\t\t\t });\n\t\t\t \n\t\t\t var infowindow = new google.maps.InfoWindow({\n content: '<p>Marker Location:' + marker.getPosition() + '</p>'\n });\n\t\t };\n\t\t};\n\t\tgoogle.maps.event.addDomListener(window, 'load', initialize);\n </script>\n </head>\n <body>\n <!-- ***** CHANGES ***** -->\n <!-- Insert YOUR BLUEMIX URL -->\n <div id=\"header\">\n <p>Hello this is the Cloudant Sensor Geo Data Site ... </p> <a href=\"http://<--YOUR BLUEMIX URL-->.mybluemix.net/cloudant\">Go to Senosor Data Page</a>\n </div>\n <div id=\"output\">Connecting to Socket to get the Cloudant Sensor Geo Data...</div>\n <div id=\"map-canvas\"></div>\n <div id=\"footer\">\n IoT Bluemix Mobile Sample Page\n </div>\n </body>\n</html>","x":357.5334167480469,"y":494.19998931884766,"wires":[["b610d86f.75b838"]]},{"id":"2b28137a.f0b124","type":"http in","z":"a4c85830.58c3a8","name":"","url":"/map","method":"get","swaggerDoc":"","x":84.53341674804688,"y":494.19998931884766,"wires":[["bb98a40f.8d2b9"]]},{"id":"b610d86f.75b838","type":"http response","z":"a4c85830.58c3a8","name":"http://YOUR_BLUEMIN_URL/map","x":715.5334167480469,"y":494.19998931884766,"wires":[]},{"id":"838038b0.af893","type":"http in","z":"a4c85830.58c3a8","name":"","url":"/audio","method":"get","swaggerDoc":"","x":84.53341674804688,"y":459.19998931884766,"wires":[["9d67145b.de70d8"]]},{"id":"580a8ccb.27f9f4","type":"http response","z":"a4c85830.58c3a8","name":"http://YOUR_BLUEMIN_URL/audio","x":714.8289794921875,"y":458.47271728515625,"wires":[]},{"id":"9d67145b.de70d8","type":"template","z":"a4c85830.58c3a8","name":"Get audio and play the audio in Browser","field":"","fieldType":"msg","template":"<!DOCTYPE html>\n<html>\n<head>\n <title>IBM Watson - Text To Speech</title>\n <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n \n <script type=\"text/javascript\">\n var socketaddy = \"ws://\" + window.location.host + \"/ws/audio\";\n\n $(document).ready(function(){\n var output = document.getElementById('output')\n $('#output').on('playing', function () {\n $('#text').text('Playing audio.')\n \n });\n $('#output').on('ended', function () {\n $('#text').text('Waiting for audio...')\n \n });\n sock = new WebSocket(socketaddy);\n sock.onopen = function(){\n $('#text').text('Waiting for audio...');\n console.log(\"Connected websocket\");\n };\n sock.onerror = function(){ \n console.log(\"Websocket error\"); \n };\n sock.onclose = function () {\n $('#text').text('Not connected. Refresh the page?')\n }\n sock.onmessage = function(evt){\n console.log(\"Websocket message\", evt); \n output.src = window.URL.createObjectURL(evt.data);\n output.play();\n };\n });\n </script>\n \n</head>\n<body style=\"font-size: 56px; font-family: helvetica; text-align: center; margin-top: 100px;\">\n <div id=\"text\">Connecting...</div>\n <audio id=\"output\"></audio>\n</body>\n</html>","x":341.5334167480469,"y":459.19998931884766,"wires":[["580a8ccb.27f9f4"]]},{"id":"b2ca216a.296518","type":"cloudant in","z":"a4c85830.58c3a8","service":"MyTempIoTDemo01-cloudantNoSQLDB","cloudant":"","name":"Search for given Value","database":"my_demo_iot_db","search":"_idx_","design":"_d_search","index":"_inx_all","x":645.2000885009766,"y":406.53336906433105,"wires":[["2179d8f5.8ea8a"]]},{"id":"91d1039.0a60d8","type":"function","z":"a4c85830.58c3a8","name":"Search Value (\"theStatus:C*\")","func":"msg.payload = \"theStatus:C*\"; \nreturn msg;","outputs":1,"noerr":0,"x":383.20005798339844,"y":406.5333595275879,"wires":[["b2ca216a.296518"]]},{"id":"34401ada.50db76","type":"debug","z":"a4c85830.58c3a8","name":"all docs","active":false,"console":"false","complete":"payload","x":510.16670989990234,"y":237.46666717529297,"wires":[]}]